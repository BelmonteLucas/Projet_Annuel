input {
  beats {
    port => 5044
  }
  
  # Input simple pour commencer sans dÃ©pendre des fichiers de log
  stdin { }
  
  # On commentera temporairement les inputs de fichiers qui peuvent poser problÃ¨me
  # file {
  #   path => "/var/log/snort/alert_json.txt"
  #   start_position => "beginning"
  #   type => "snort"
  #   codec => "json"
  # }
  
  # file {
  #   path => "/var/log/wazuh/alerts/alerts.json"
  #   start_position => "beginning"
  #   type => "wazuh"
  #   codec => "json"
  # }
}

filter {
  if [type] == "snort" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} \[%{INT:alert_id}\] %{DATA:alert_message}" }
    }
    
    date {
      match => [ "timestamp", "ISO8601" ]
    }
    
    mutate {
      add_field => { "event_type" => "ids_alert" }
      add_field => { "source_system" => "snort" }
    }
  }
  
  if [type] == "wazuh" {
    mutate {
      add_field => { "event_type" => "hids_alert" }
      add_field => { "source_system" => "wazuh" }
    }
    
    if [rule] {
      mutate {
        add_field => { "rule_id" => "%{[rule][id]}" }
        add_field => { "rule_level" => "%{[rule][level]}" }
        add_field => { "rule_description" => "%{[rule][description]}" }
      }
    }
  }
  
  # Enrichment for geolocation
  if [srcip] {
    geoip {
      source => "srcip"
      target => "geoip"
    }
  }
  
  # Add severity classification
  if [rule_level] {
    if [rule_level] >= "10" {
      mutate { add_field => { "severity" => "critical" } }
    } else if [rule_level] >= "7" {
      mutate { add_field => { "severity" => "high" } }
    } else if [rule_level] >= "4" {
      mutate { add_field => { "severity" => "medium" } }
    } else {
      mutate { add_field => { "severity" => "low" } }
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "honeypot-logs-%{+YYYY.MM.dd}"
  }
  
  stdout {
    codec => rubydebug
  }
}

