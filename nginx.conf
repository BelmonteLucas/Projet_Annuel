# =============================================================================
# CONFIGURATION NGINX - HoneyPot Pro Max
# =============================================================================
# Serveur web frontend avec reverse proxy vers l'API backend
# Configuration HTTP/HTTPS avec headers de sécurité renforcés
# Optimisé pour les tests de sécurité et la production
# =============================================================================

# =============================================================================
# SERVEUR HTTP (Port 80) - Développement et redirection HTTPS
# =============================================================================
server {
    listen 80;                                              # Port HTTP standard
    server_name localhost;                                  # Nom de domaine (localhost pour dev)

    root /usr/share/nginx/html;                             # Répertoire des fichiers statiques
    index index.html;                                       # Page d'accueil par défaut

    # =========================================================================
    # REVERSE PROXY VERS L'API BACKEND
    # =========================================================================
    # Toutes les requêtes /api/* sont redirigées vers le service backend FastAPI
    location /api/ {
        proxy_pass http://backend_api_service:8000/;        # Service Docker backend (résolution DNS interne)
        
        # En-têtes de proxy pour préserver les informations client
        proxy_set_header Host $host;                        # Nom d'hôte original
        proxy_set_header X-Real-IP $remote_addr;            # Adresse IP réelle du client
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Chaîne des proxies
        proxy_set_header X-Forwarded-Proto $scheme;         # Protocole original (http/https)
        
        # =====================================================================
        # HEADERS CORS - Autorisation cross-origin pour le frontend
        # =====================================================================
        add_header Access-Control-Allow-Origin *;           # Autorise tous les domaines (dev uniquement)
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";  # Méthodes HTTP autorisées
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
        
        # Gestion des requêtes preflight CORS (OPTIONS)
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
            add_header Access-Control-Max-Age 1728000;       # Cache preflight 20 jours
            add_header Content-Type 'text/plain; charset=utf-8';
            add_header Content-Length 0;
            return 204;                                      # Réponse vide pour preflight
        }
    }

    # =========================================================================
    # SERVICE DES FICHIERS STATIQUES
    # =========================================================================
    location / {
        try_files $uri $uri/ =404;                          # Tentative de servir le fichier, sinon 404
    }

    # =========================================================================
    # HEADERS DE SÉCURITÉ RECOMMANDÉS
    # =========================================================================
    add_header X-Content-Type-Options "nosniff";            # Prévient le MIME sniffing
    add_header X-Frame-Options "SAMEORIGIN";                # Protection contre le clickjacking
    add_header X-XSS-Protection "1; mode=block";            # Protection XSS basique
}

# =============================================================================
# SERVEUR HTTPS (Port 443) - Production sécurisée
# =============================================================================
server {
    listen 443 ssl;                                         # Port HTTPS avec SSL/TLS
    server_name localhost;                                  # Nom de domaine

    # =========================================================================
    # CONFIGURATION SSL/TLS
    # =========================================================================
    ssl_certificate     /etc/ssl/certs/nginx.crt;          # Certificat SSL (auto-signé pour dev)
    ssl_certificate_key /etc/ssl/private/nginx.key;        # Clé privée SSL

    root /usr/share/nginx/html;                             # Répertoire des fichiers statiques
    index index.html;                                       # Page d'accueil par défaut

    # =========================================================================
    # REVERSE PROXY VERS L'API BACKEND (Configuration identique à HTTP)
    # =========================================================================
    location /api/ {
        proxy_pass http://backend_api_service:8000/;        # Backend FastAPI
        
        # En-têtes de proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;         # Important : indique HTTPS au backend
        
        # Headers CORS
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
        
        # Gestion preflight CORS
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain; charset=utf-8';
            add_header Content-Length 0;
            return 204;
        }
    }

    # =========================================================================
    # SERVICE DES FICHIERS STATIQUES
    # =========================================================================
    location / {
        try_files $uri $uri/ =404;
    }

    # =========================================================================
    # HEADERS DE SÉCURITÉ RENFORCÉS POUR HTTPS
    # =========================================================================
    add_header X-Content-Type-Options "nosniff";            # Prévient le MIME sniffing
    add_header X-Frame-Options "SAMEORIGIN";                # Protection contre le clickjacking
    add_header X-XSS-Protection "1; mode=block";            # Protection XSS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;  # Force HTTPS (1 an)
}